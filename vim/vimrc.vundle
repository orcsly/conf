set nocompatible
filetype off

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" let Vundle manage Vundle
" required!
Bundle 'gmarik/vundle'

" The bundles you install will be listed here
Bundle 'scrooloose/nerdtree'
Bundle 'tpope/vim-fugitive'
Bundle 'klen/python-mode'
Bundle 'davidhalter/jedi-vim'
Bundle 'sontek/minibufexpl.vim'

syntax on
filetype plugin indent on

set encoding=utf-8
set backspace=indent,eol,start

nnoremap / /\v
vnoremap / /\v

let mapleader = ","

set colorcolumn=81
set t_Co=256

cnoremap help vert help 

" case-sensitive search works better
set ignorecase " all lowercase search terms search insensitively
set smartcase  " Adding an uppercase letter searches sensitively

set gdefault " apply substitutions globally per line

" highlight search results as I type
set incsearch
set showmatch
set hlsearch

" make j/k work by file line instead of screen line
nnoremap j gj
nnoremap k gk

" remap jj to the escape key to make moving from insert to normal mode easier
inoremap jj <ESC>

" navigating panes
nmap <silent> <c-k> :wincmd k<CR>
nmap <silent> <c-j> :wincmd j<CR>
nmap <silent> <c-h> :wincmd h<CR>
nmap <silent> <c-l> :wincmd l<CR>

nmap <silent> <c-]> :tabnext<CR>
nmap <silent> <c-\[> :tabprevious<CR>

" remove trailing whitespace
autocmd BufWritePre *.py normal m`:%s/\s\+$//e``

" turn line numbering on
set ruler
set relativenumber
set numberwidth=4

" code folding
set foldmethod=indent
set foldlevel=99
nnoremap <space> za

" fold by tag
nnoremap <leader>ft Vatzf 

" sort CSS properties
nnoremap <leader>S ?{<CR>jV/^\s*\}?$<CR>k:sort<CR>:noh<CR>

" open a new vertical split and switch to it
nnoremap <leader>w <C-w>v<C-w>l

nnoremap <F3> :NumbersToggle<CR>
nnoremap <F4> :set hlsearch!<CR>
nnoremap <F5> :buffers<CR>:buffer<Space>

map <F8> :echo "hi<" . synIDattr(synID(line("."),col("."),1),"name") . '> trans<'
            \ . synIDattr(synID(line("."),col("."),0),"name") . "> lo<"
            \ . synIDattr(synIDtrans(synID(line("."),col("."),1)),"name") . ">"<CR>

" Python-mode
" Activate rope
" Keys:
" K             Show python docs
" <Ctrl-Space>  Rope autocomplete
" <Ctrl-c>g     Rope goto definition
" <Ctrl-c>d     Rope show documentation
" <Ctrl-c>f     Rope find occurrences
" <Leader>b     Set, unset breakpoint (g:pymode_breakpoint enabled)
" [[            Jump on previous class or function (normal, visual, operator modes)
" ]]            Jump on next class or function (normal, visual, operator modes)
" [M            Jump on previous class or method (normal, visual, operator modes)
" ]M            Jump on next class or method (normal, visual, operator modes)
let g:pymode_rope = 0

" Documentation
let g:pymode_doc = 1
let g:pymode_doc_key = 'K'

"Linting
let g:pymode_lint = 1
let g:pymode_lint_checker = "pyflakes,pep8"
" Auto check on save
let g:pymode_lint_write = 1

" Support virtualenv
let g:pymode_virtualenv = 1

" Enable breakpoints plugin
let g:pymode_breakpoint = 1
let g:pymode_breakpoint_key = '<leader>b'

" syntax highlighting
let g:pymode_syntax = 1
let g:pymode_syntax_all = 1
let g:pymode_syntax_indent_errors = g:pymode_syntax_all
let g:pymode_syntax_space_errors = g:pymode_syntax_all

" Don't autofold code
let g:pymode_folding = 0

" jedi-vim
let g:jedi#use_tabs_not_buffers = 0
let g:jedi#popup_on_dot = 0

" Use <leader>l to toggle display of whitespace
nmap <leader>l :set list!<CR>

" And set some nice chars to do it with
set listchars=tab:»\ ,eol:¬

" automatically change window's cwd to file's dir
set autochdir

" I'm prefer spaces to tabs
set tabstop=4
set shiftwidth=4
set expandtab

let NERDTreeShowLineNumbers=1
let NERDTreeWinSize=50
let NERDTreeIgnore = ['\.pyc$', '\.swp$', '\.DS_Store$']
let NERDTreeShowHidden = 1
autocmd VimEnter * NERDTree
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif
autocmd VimEnter * wincmd w

nnoremap <c-D> :NERDTreeToggle<CR>
let NERDTreeMirror=1

" basic syntax coloring options
highlight String ctermfg=3
highlight VertSplit ctermfg=0 ctermbg=8
highlight LineNr ctermfg=10
highlight Comment ctermfg=0
highlight StatusLine ctermfg=0 ctermbg=14 cterm=reverse " current focus
highlight StatusLineNC ctermfg=0 ctermbg=10 " non-focused
highlight ColorColumn ctermbg=234
if &background=='light'
    "highlight ColorColumn ctermbg=187
    "highlight ColorColumn ctermbg=188
    "highlight ColorColumn ctermbg=229 " yellow
    highlight ColorColumn ctermbg=230 " pale yellow
    highlight VertSplit ctermfg=7 ctermbg=15
    highlight LineNr ctermfg=7
    highlight Comment ctermfg=7
    highlight StatusLine ctermfg=7 ctermbg=14 " current focus
    highlight StatusLineNC ctermfg=7 ctermbg=15 " non-focused
endif


